// #include <Arduino.h>
// #include "components/XSeat.h"
// #include "components/XBelt.h"
// #include "components/XButton.h"
// #include <arduino-timer.h>

// /* * * * Pin * * * * */
// #define PIN_SEAT_LEFT 2
// #define PIN_SEAT_RIGHT 3
// #define PIN_BELT_LEFT 7
// #define PIN_BELT_RIGHT 5

// #define BUTTON_START 8
// #define BUTTON_SLOW 9

// /* * * * Timmer * * * */
// #define T10MS 1
// #define T30MS 3
// #define T50MS 5
// #define T100MS 10
// #define T1000MS 100
// // #define T1MS 1

// Timer<1, micros> timer;
// uint16_t countTimer;

// enum SECTION
// {
//   DEFAULT_STATE = 0,
//   PAYMENT = 1,
//   BELT = 2,
//   SEAT = 3,
//   BUTTON = 4,
// };

// XSeat xSeatLeft(PIN_SEAT_LEFT, 90);
// // XSeat xSeatRight(PIN_SEAT_RIGHT, 90);

// // XBelt xBeltLeft(PIN_BELT_LEFT);
// // XBelt xBeltRight(PIN_BELT_RIGHT);

// // XButton xButtonStart(BUTTON_START);
// // XButton xButtonSlow(BUTTON_SLOW);

// int xSeatLeftState = 0;
// int xSeatRightState = 0;

// int xBeltRightState = 0;
// int xBeltLeftState = 0;

// int Counter = 0;
// char msg_t[100];

// void sendTo(int section, int leftData, int rightData)
// {
//   // uint8_t buffer[3];
//   // memcpy(buffer, &section, 1);
//   // memcpy(buffer + 1, &leftData, 1);
//   // memcpy(buffer + 2, &rightData, 1);
//   // Serial.write(buffer, 3);
//   Counter++;
//   memset(msg_t, 0x00, sizeof msg_t);
//   snprintf(msg_t, sizeof(msg_t), "%d%d%d Counter -> %d", section, leftData, rightData, Counter);
//   Serial.println(msg_t);
// }

// void onSeatLeft()
// {
//   xSeatLeftState = 1;
//   sendTo(SECTION::SEAT, xSeatLeftState, xSeatRightState);
// }

// void onUnSeatLeft()
// {
//   xSeatLeftState = 0;
//   sendTo(SECTION::SEAT, xSeatLeftState, xSeatRightState);
// }

// void onSeatRight()
// {
//   xSeatRightState = 1;
//   sendTo(SECTION::SEAT, xSeatLeftState, xSeatRightState);
// }

// void onUnSeatRight()
// {
//   xSeatRightState = 0;
//   sendTo(SECTION::SEAT, xSeatLeftState, xSeatRightState);
// }

// void onPressBeltLeft()
// {
//   xBeltLeftState = 1;
//   sendTo(SECTION::BELT, xBeltLeftState, xBeltRightState);
// }

// void onReleaseBeltLeft()
// {
//   xBeltLeftState = 0;
//   sendTo(SECTION::BELT, xBeltLeftState, xBeltRightState);
// }

// void onPressBeltRight()
// {
//   xBeltRightState = 1;
//   sendTo(SECTION::BELT, xBeltLeftState, xBeltRightState);
// }

// void onReleaseBeltRight()
// {
//   xBeltRightState = 0;
//   sendTo(SECTION::BELT, xBeltLeftState, xBeltRightState);
// }

// void onPressButtonStart()
// {
//   sendTo(SECTION::BUTTON, 0, 2);
// }

// void onPressButtonSlow()
// {
//   sendTo(SECTION::BUTTON, 0, 1);
// }

// // bool Tick_Handler(void *)
// // {
// //   countTimer = countTimer + 1;
// //   if ((countTimer % T30MS) == 0)
// //   {
// //   }
// //   if ((countTimer % T50MS) == 0)
// //   {
// //     xBeltLeft.update();
// //     xBeltRight.update();
// //     xButtonStart.update();
// //     xButtonSlow.update();
// //   }
// //   if ((countTimer % T100MS) == 0)
// //   {
// //     // xSeatLeft.checkSeat();
// //     // xSeatRight.checkSeat();
// //   }
// //   if (countTimer >= T1000MS)
// //   {
// //     countTimer = 0;
// //   }
// //   return true;
// // }

// void setup()
// {
//   Serial.begin(115200);
//   Serial.println(F("Start firmware..........."));

//   xSeatLeft.begin();
//   // xSeatRight.begin();

//   // xBeltLeft.begin();
//   // xBeltRight.begin();

//   // xButtonStart.begin();
//   // xButtonSlow.begin();

//   xSeatLeft.onSeat(onSeatLeft);
//   xSeatLeft.onUnSeat(onUnSeatLeft);

//   // xSeatRight.onSeat(onSeatRight);
//   // xSeatRight.onUnSeat(onUnSeatRight);

//   // xBeltLeft.onPress(onPressBeltLeft);
//   // xBeltLeft.onRelease(onReleaseBeltLeft);

//   // xBeltRight.onPress(onPressBeltRight);
//   // xBeltRight.onRelease(onReleaseBeltRight);

//   // xButtonStart.onPress(onPressButtonStart);
//   // xButtonSlow.onPress(onPressButtonSlow);

//   // timer.every(10000, Tick_Handler);
// }

// void loop()
// {
//   // xBeltLeft.update();
//   // xBeltRight.update();

//   // xButtonStart.update();
//   // xButtonSlow.update();

//   xSeatLeft.checkSeat();
//   // xSeatRight.checkSeat();

//   // timer.tick();
// }




// #include <Arduino.h>
// #include <arduino-timer.h>

// Timer<1, micros> timer;
// uint16_t countTimer;

// const int ULTRASONIC_PIN = 2;

// bool Tick_Handler(void *)
// {
//   countTimer = countTimer + 1;
//   if ((countTimer % 100) == 0)
//   {
//     Serial.println(countTimer);
//     long duration = pulseIn(ULTRASONIC_PIN, HIGH);
//     long distance = (duration / 2) / 29.1;
//     Serial.println(distance);
//     Serial.flush();
//   }

//   if (countTimer >= 1000)
//   {
//     Serial.println("Counter...");
//     countTimer = 0;
//   }
//   return true;
// }

// void setup()
// {
//   Serial.begin(230400);
//   timer.every(1000, Tick_Handler);
// }

// void loop()
// {
//   timer.tick();
// }

